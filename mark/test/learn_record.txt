################
----------------

Tips: 学习札记

Vue-quick:
属性: 就是指加载标签的内部. 如: <p v-text="" v-on="" v-bind:src="" v-show="" v-if=""  ></p>等

01. el是vue实例的属性, 用来将Vue实例, 挂载到指定的标签元素上面去. 一般使用id进行挂载. 不能挂在html和body元素.
02. data是vue实例的属性, 用来存储数据. Vue界面是由数据驱动的, 因此当数据改变时, 真个界面也会改变的(此时就是仅仅改变被Vue挂载的标签元素).
03. v-text属性. 用来控制双标签中间的文本内容, 会直接覆盖, 不会进行局部保留. 而且仅有双标前能够使用. 会原封不动的解析文本内容到双标签中.
04. v-html属性. 用来控制双标签中的文本内容, 但是当文本内容包括了节点元素时, 也能够内解析. 用来解析innerHTML文本.
05. v-on属性. 用来对标签绑定事件, 比如说, v-on:click, v-on:dblclick, v-on:blur, v-on:change等等. 然后可以指定方法, 当产生事件时, 就会触发响应的方法.
    v-on:click能够简写为 @click, 其他的也同理.
06. v-show属性. 作为标签的内部属性, 用来决定该标签显示与不显示, 通常为v-show="表达式", 当表达式为true则显示反之不显示. 一般我们可以通过方法来控制.
    v-show的原理是改变标签的display属性的.
07. v-if属性. 作为标签的内部属性, 也是用来决定该标签显示与不显示, 通常也是表达式形式介个方法来控制. 原理是将该标签动态的从DOM树中移除与添加. 因此, 性能消耗比较大.
08. v-bind属性. 用来为标签绑定属性, 例如, v-bind:src=""  v-bind:title="". 同样的, 能够简写为:src="" :title="" :alt="".
09. v-for属性. 这个指令很强, 一般情况会和数组结合使用. 格式: item in 数组名, item是指数组中的具体的每一项, 数组名是和data中的数组名对应, 不能改.
    当Vue中的data部分中的数组的数据发生改变时, 页面上相应的列表也会改变. 还有一种使用格式 (item,index) in 数组名. 此时能够将index也获取到.
    index和item是对应的, 获取当前item项的index. 另外, 标签内部能够使用{{}}插值表达式输出.
10. v-on属性的补充. v-on:click 等同于 @click. 事件绑定的方法写成函数调用的方式, 而且能够传递参数, 接收时需要在方法上写上形参来接收.
    @keyup是事件修饰符, 下面包括很多具体的触发事件. enter是指回车键触发事件.
    @keyup.tab是指当用户按Tab键到达该标签时会触发事件.
11. v-model属性. v-model是一个双向绑定属性.
    比如, 某个文本框绑定了Vue的data部分的一个变量, 那么文本框就会显示这个变量的值. 当文本框的值改变时, data部分中的这个变量也会跟着变.
    无论是改变Vue中data部分的值还是改变表单的值, 两者都会改变.



























